import java.io.IOException;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import cron.analytics.RankInfo;


public class SearchdexingInspector {

	public static String[] to_follow =	{
		"site:www.cdiscount.com/sa-10/",
		"site:www.cdiscount.com/le-sport/r-",
		"site:www.cdiscount.com/telephonie/r-",
		"site:www.cdiscount.com/photo-numerique/r-",
		"site:www.cdiscount.com/high-tech/r-",
		"site:www.cdiscount.com/chaussures/r-",
		"site:www.cdiscount.com/bagages/r-",
		"site:www.cdiscount.com/bijouterie/r-",
		"site:www.cdiscount.com/vin-champagne/r-",
		"site:www.cdiscount.com/au-quotidien/r-",
		"site:www.cdiscount.com/maison/r-",
		"site:www.cdiscount.com/electromenager/r-",
		"site:www.cdiscount.com/juniors/r-",
		"site:www.cdiscount.com/informatique/r-",
		"site:www.cdiscount.com/dvd/r-",
		"site:www.cdiscount.com/auto/r-",
	"site:www.cdiscount.com/livres-bd/r-"};

	public static IndexationInfo gettingIndexationCounter(String request){
		IndexationInfo info= new IndexationInfo();
		info.setRequest(request);
		// we here fetch up to five paginations
		int nb_depth = 5;
		long startTimeMs = System.currentTimeMillis( );
		org.jsoup.nodes.Document doc;
		int depth=0;
		int nb_results=0;
		int my_rank=50;
		String my_url = "";
		boolean found = false;
		while (depth<nb_depth && !found){
			try{
				// we wait between x and xx seconds
				Thread.sleep(randInt(min_number_of_wait_times,max_number_of_wait_times)*1000);
				System.out.println("Fetching a new page");
				doc =  Jsoup.connect(
						"https://www.google.fr/search?q="+keyword+"&start="+Integer.toString(depth*10))
						.userAgent("Mozilla/5.0 (Windows; U; Windows NT 6.1; en-GB;     rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13 (.NET CLR 3.5.30729)")
						.ignoreHttpErrors(true)
						.timeout(0)
						.get();
				Elements serps = doc.select("h3[class=r]");
				for (Element serp : serps) {
					Element link = serp.getElementsByTag("a").first();
					String linkref = link.attr("href");
					if (linkref.startsWith("/url?q=")){
						nb_results++;
						linkref = linkref.substring(7,linkref.indexOf("&"));
					}
					if (linkref.contains(targe_name)){
						my_rank=nb_results;
						my_url=linkref;
						found=true;
					}			
					//					System.out.println("Link ref: "+linkref);
					//					System.out.println("Title: "+serp.text());
				}
				if (nb_results == 0){
					System.out.println("Warning captcha");
				}
				depth++;
			}
			catch (IOException e) {
				e.printStackTrace();
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		long taskTimeMs  = System.currentTimeMillis( ) - startTimeMs;
		//System.out.println(taskTimeMs);
		info.setPosition(my_rank);
		info.setUrl(my_url);
		if (nb_results == 0){
			System.out.println("Warning captcha");
		}else {
			System.out.println("Number of links : "+nb_results);
		}
		System.out.println("My rank : "+my_rank+" for keyword : "+keyword);
		System.out.println("My URL : "+my_url+" for keyword : "+keyword);
		return info;
	}
}
