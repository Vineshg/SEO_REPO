import java.io.IOException;
import java.util.Random;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

public class SearchdexingInspector {

	private static int min_number_of_wait_times = 80;
	private static int max_number_of_wait_times = 120;

	private static String request_string ="https://www.google.fr/#safe=off&q=";

	public static String[] to_follow =	{
		"site:www.cdiscount.com/sa-10/",
		"site:www.cdiscount.com/le-sport/r-",
		"site:www.cdiscount.com/telephonie/r-",
		"site:www.cdiscount.com/photo-numerique/r-",
		"site:www.cdiscount.com/high-tech/r-",
		"site:www.cdiscount.com/chaussures/r-",
		"site:www.cdiscount.com/bagages/r-",
		"site:www.cdiscount.com/bijouterie/r-",
		"site:www.cdiscount.com/vin-champagne/r-",
		"site:www.cdiscount.com/au-quotidien/r-",
		"site:www.cdiscount.com/maison/r-",
		"site:www.cdiscount.com/electromenager/r-",
		"site:www.cdiscount.com/juniors/r-",
		"site:www.cdiscount.com/informatique/r-",
		"site:www.cdiscount.com/dvd/r-",
		"site:www.cdiscount.com/auto/r-",
	"site:www.cdiscount.com/livres-bd/r-"};

	public static IndexationInfo gettingIndexationCounter(String request){
		IndexationInfo info= new IndexationInfo();
		info.setRequest(request);
		// we here fetch up to five paginations

		org.jsoup.nodes.Document doc;

		try{
			// we wait between x and xx seconds
			Thread.sleep(randInt(min_number_of_wait_times,max_number_of_wait_times)*1000);
			System.out.println("Fetching a new page");
			request=request.replace("/", "%2F");
			doc =  Jsoup.connect(
					request_string+request)
					.userAgent("Mozilla/5.0 (Windows; U; Windows NT 6.1; en-GB;     rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13 (.NET CLR 3.5.30729)")
					.ignoreHttpErrors(true)
					.timeout(0)
					.get();
			Elements serps = doc.select("h3[class=r]");
			for (Element serp : serps) {
				Element link = serp.getElementsByTag("a").first();
				String linkref = link.attr("href");
				if (linkref.startsWith("/url?q=")){
					nb_results++;
					linkref = linkref.substring(7,linkref.indexOf("&"));
				}
				//					if (linkref.contains(targe_name)){
				//						my_rank=nb_results;
				//						my_url=linkref;
				//						found=true;
				//					}			
				//					System.out.println("Link ref: "+linkref);
				//					System.out.println("Title: "+serp.text());
			}
			if (nb_results == 0){
				System.out.println("Warning captcha");
			}
			depth++;
		}
		catch (IOException e) {
			e.printStackTrace();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		info.setCount(my_rank);

		System.out.println("My count : "+my_rank+" for request : "+request);

		return info;
	}

	public static int randInt(int min, int max) {
		// NOTE: Usually this should be a field rather than a method
		// variable so that it is not re-seeded every call.
		Random rand = new Random();
		// nextInt is normally exclusive of the top value,
		// so add 1 to make it inclusive
		int randomNum = rand.nextInt((max - min) + 1) + min;
		return randomNum;
	}

	private static class IndexationInfo {
		String request="";
		int count=0;
		public String getRequest() {
			return request;
		}
		public void setRequest(String request) {
			this.request = request;
		}
		public int getCount() {
			return count;
		}
		public void setCount(int count) {
			this.count = count;
		}
	}
}
