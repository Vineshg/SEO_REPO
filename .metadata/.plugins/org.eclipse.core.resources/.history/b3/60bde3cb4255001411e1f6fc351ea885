package vsm;

import java.net.HttpURLConnection;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

public class MagasinWorkerThread implements Runnable {
	private String magasin;
	private String field_to_fetch;
	private Connection con;
	private static ArrayList<URLContentInfo> my_infos = new ArrayList<URLContentInfo>();

	public MagasinWorkerThread(Connection con, String magasin, String field_to_fetch) throws SQLException{
		this.magasin=magasin;
		this.field_to_fetch=field_to_fetch;
		System.out.println("Computing metrics for magasin :"+ magasin);
		this.con = con;
		PreparedStatement pst = null;
		ResultSet rs = null;
		try {
			// we open the database
			pst = con.prepareStatement("SELECT "+field_to_fetch+" , URL, VENDOR, MAGASIN, RAYON, PRODUIT FROM CRAWL_RESULTS where magasin='"+magasin+"'");
			rs = pst.executeQuery();
			while (rs.next()) {
				URLContentInfo url_info = new URLContentInfo();
				String content = rs.getString(1);
				String my_url = rs.getString(2);
				String my_vendor = rs.getString(3);
				String my_magasin = rs.getString(4);
				String my_rayon = rs.getString(5);
				String my_produit = rs.getString(6);
				url_info.setContent(content);
				url_info.setUrl(my_url);
				url_info.setMagasin(my_magasin);
				url_info.setRayon(my_rayon);
				url_info.setProduit(my_produit);
				url_info.setVendor(my_vendor);
				my_infos.add(url_info);
			}    
		} catch (Exception ex) {
			Logger lgr = Logger.getLogger(ProcessVectorSpaceSimilarity.class.getName());
			lgr.log(Level.SEVERE, ex.getMessage(), ex);
		} finally {
			try {
				if (rs != null) {
					rs.close();
				}
				if (pst != null) {
					pst.close();
				}
				if (con != null) {
					con.close();
				}
			} catch (SQLException ex) {
				Logger lgr = Logger.getLogger(ProcessVectorSpaceSimilarity.class.getName());
				lgr.log(Level.WARNING, ex.getMessage(), ex);
			}
		}	
	}

	public void run() {
		ProcessVectorSpaceSimilarity obj = new ProcessVectorSpaceSimilarity();
		obj.fetchData(magasin);
		System.out.println("Nb " + field_to_fetch +" "+ nb_content);
		obj.buildComparisonMatrix();
		obj.saveResults();
		System.out.println(Thread.currentThread().getName()+" End");
	}

//	private void updateStatus(List<Integer> status) throws SQLException{
//		Statement st = con.createStatement();       
//		con.setAutoCommit(false);      
//		for (int i=0;i<status.size();i++){
//			String batch ="UPDATE HTTPSTATUS_LIST SET STATUS="+status.get(i)+", TO_FETCH=FALSE WHERE ID="+thread_fetch_ids.get(i);
//			st.addBatch(batch);
//		}      
//		//int counts[] = st.executeBatch();
//		st.executeBatch();
//		con.commit();
//		System.out.println("Inserting : " + status.size() + "ULRs into database");
//	}
//
//
//	private List<Integer> processCommand() {
//		List<Integer> my_fetched_status = new ArrayList<Integer>();
//		for (int i=0;i<my_urls_to_fetch.size();i++){
//			String line=my_urls_to_fetch.get(i);
//			// second method
//			int status=-1;
//			HttpURLConnection connection = null;
//			try{
//				System.out.println(Thread.currentThread().getName()+" fetching URL : "+line);
//				URL url = new URL(line);
//				connection = (HttpURLConnection)url.openConnection();
//				connection.setRequestMethod("HEAD");
//				connection.setRequestProperty("User-Agent",this.user_agent);
//				connection.setInstanceFollowRedirects(false);
//				connection.setConnectTimeout(30000);
//				connection.connect();
//				// getting the status from the connection
//				status=connection.getResponseCode();
//
//			  } catch (Exception e){
//				System.out.println("Error with "+line);
//				e.printStackTrace();
//			}
//
//			if (connection != null){
//				connection.disconnect();
//			}
//			my_fetched_status.add(status);
//		}
//		return my_fetched_status;
//	}
	

}
