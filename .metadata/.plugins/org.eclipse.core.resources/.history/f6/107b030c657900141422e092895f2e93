package crawl4j.corpus.documentcounter;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashSet;
import java.util.Set;

public class DocumentCounter {
	private static String select_statement="select DOC_LIST from CORPUS_WORDS";
	private Set<String> documents_set = new HashSet<String>();
	private static Connection con; 
	
	public static void main(String[] args){
		try {
			instantiate_connection();
			counting_documents();
		} catch (SQLException e1) {
			e1.printStackTrace();
			System.out.println("Trouble with the POSTGRESQL database");
			System.exit(0);
		}
	}
	
	private static void instantiate_connection() throws SQLException{
		// instantiating database connection
		String url="jdbc:postgresql://localhost/CRAWL4J";
		String user="postgres";
		String passwd="mogette";
		con = DriverManager.getConnection(url, user, passwd);
	}
	
	private static void counting_documents(){
		System.out.println("Getting all URLs and outside links from the crawl results database");
		PreparedStatement pst = con.prepareStatement(fetching_request);
		ResultSet rs = pst.executeQuery();
		while (rs.next()) {
			counter++;
			String url_node = rs.getString(1);
			Integer status = rs.getInt(2);
			String magasin = rs.getString(3);
			String page_type = rs.getString(4);
			String output_links = rs.getString(5);
			NodeInfos result = new NodeInfos();
			result.setUrl(url_node);
			result.setStatus(status);
			result.setMagasin(magasin);
			result.setType(page_type);
			Set<String> outSet = parse_nodes_out_links(output_links);
			nodes_infos.put(result, outSet);
			System.out.println("Getting URL number :"+counter + " : " +url_node);
		}		
	}

}
